---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/3/24 10:35
---

---@class TaskSystemHelper
local TaskSystemHelper = T(Lib, "TaskSystemHelper")
---@type TaskConfig
local TaskConfig = T(Config, "TaskConfig")
---@type TargetConditionHelper
local TargetConditionHelper = T(Lib, "TargetConditionHelper")

function TaskSystemHelper:init()
    self:initEvent()
end

function TaskSystemHelper:initEvent()
    Lib.subscribeEvent(Event.EVENT_GAME_ROLE_COMMON_ADD_ITEM, function(player)
        player:checkUpdateTaskData(Define.TargetConditionKey.ITEM)
    end)
end

function TaskSystemHelper:checkUpdateKillTask(player, conditionKey, params, taskData)
    local needUpdate = false
    for taskId, taskInfo in pairs(taskData) do
        if taskInfo.taskCompleteCondition[conditionKey] then
            for index, val in pairs(taskInfo.taskCompleteCondition[conditionKey]) do
                if val.monsterId == params.monsterId then
                    local num = taskData[taskId].taskCompleteCondition[conditionKey][index].killCounts or 0
                    taskData[taskId].taskCompleteCondition[conditionKey][index].killCounts = num + 1
                    needUpdate = true
                end
            end
        end
    end
    return needUpdate, taskData
end

function TaskSystemHelper:updateTaskKillCondition(player, conditionKey, params)
    local mainTask = player:getMainTask()
    local needUpdate, newData = self:checkUpdateKillTask(player, conditionKey, params, mainTask)
    if needUpdate then
        player:setMainTask(newData)
    end

    local branchTask = player:getBranchTask()
    local needUpdate, newData = self:checkUpdateKillTask(player, conditionKey, params, branchTask)
    if needUpdate then
        player:setBranchTask(newData)
    end
end

function TaskSystemHelper:checkUpdateTaskCondition(player, conditionKey, params)
    local conditionTask = TaskConfig:getTaskListByCondition(conditionKey)
    for _, info in pairs(conditionTask.complete) do
        if self:checkTaskIsComplete(player, info.taskId, params) then
            player:completeOneTask(info.taskId)
        end
    end

    World.Timer(2, function()
        if player and player:isValid() then
            for _, info in pairs(conditionTask.open) do
                local taskConfig = TaskConfig:getCfgById(info.taskId)
                if taskConfig.autoIssue then
                    player:receiveOneTask(info.taskId, false, params)
                end
            end
        end
    end)
end

-- 初始化一个任务数据
function TaskSystemHelper:createOneTaskData(taskId)
    local taskInfo = TaskConfig:getCfgById(taskId)
    local taskData = {}
    taskData.taskId = taskId
    taskData.receiveTime = os.time()
    taskData.taskCompleteCondition = Lib.copy(taskInfo.taskCompleteCondition) or {}
    return taskData
end

-- 检测任务是否可以被接取
function TaskSystemHelper:checkIsCanReceiveTask(player, taskId, params)
    local taskConfig = TaskConfig:getCfgById(taskId)
    if not taskConfig then
        return false
    end
    if taskConfig.taskType == Define.TaskType.Main then
        local mainTask = player:getMainTask()
        if mainTask and next(mainTask) then
            return false
        end
    end

    local completeTask = player:getCompleteTask()
    if taskConfig.taskType == Define.TaskType.Main and completeTask[taskId] then
        return false
    end
    local branchTask = player:getBranchTask()
    if taskConfig.preTask ~= 0 then
        if not completeTask[taskConfig.preTask] then
            return false
        end
    end

    if taskConfig.limitCounts and taskConfig.limitCounts > 0 then
        local haveNum = completeTask[taskId] or 0
        if haveNum >= taskConfig.limitCounts then
            return false
        end
    end

    for conditionKey, list in pairs(taskConfig.taskCondition) do
        for _, condition in pairs(list) do
            if not TargetConditionHelper[conditionKey](condition, player, taskId, params) then
                return false
            end
        end
    end
    return true
end

-- 检测任务是否完成
function TaskSystemHelper:checkTaskIsComplete(player, taskId, params)
    local taskConfig = TaskConfig:getCfgById(taskId)
    if not taskConfig then
        return false
    end
    local mainTask = player:getMainTask()
    local branchTask = player:getBranchTask()
    if not (mainTask[taskId] or branchTask[taskId]) then
        return false
    end

    for conditionKey, list in pairs(taskConfig.taskCompleteCondition) do
        for _, condition in pairs(list) do
            if not TargetConditionHelper[conditionKey](condition, player, taskId, params) then
                return false
            end
        end
    end
    return true
end

TaskSystemHelper:init()