---
--- Generated by PluginCreator
--- camera_edit player
--- DateTime:2023-05-25
---
local UtilCameraEdit = T(Lib, "UtilCameraEdit")
---@type SceneWelcomeConfig
local SceneWelcomeConfig = T(Config, "SceneWelcomeConfig")

local Player = Player
function Player:showWelcome(mapName)
    if not mapName then
        return
    end
    local data = SceneWelcomeConfig:getCfgByMapName(mapName)
    data.reShow= UI:hideAllWindow()
    UI:openWindow("UI/main/gui/win_scene_welcome",nil,nil,data)
end

function Player:playMovieByXML(xmlName,cb)
    if not xmlName then
        if cb then
            cb()
        end
        print("xmlName is nil")
    end
    local path = string.format("%sconfig/camera_path_xml/%s.xml", Root.Instance():getGamePath(), xmlName)
    local xmlSrc = io.open(path)
    if xmlSrc then
        self:playMovie(UtilCameraEdit:xml2tb(xmlSrc),cb)
    end
end

function Player:playMovie(data,cb)
    local saveCameraMode = Blockman.instance:getPersonView()
    Blockman.instance:setPersonView(4)
    local waitStep = 0
    for _, v in pairs(data) do
        if v then
            if not v.x or not v.y or not v.z or not v.pitch or not v.yaw then
                print("data error:",Lib.v2s(v))
                if cb then
                    cb()
                end
                break
            end
            local time =math.floor(v.smooth*20)
            if waitStep<1 then
                Me:changeCameraView({x =v.x,y =v.y,z =v.z}, tonumber(v.yaw), tonumber(v.pitch),0, time or 0)
            else
                World.LightTimer("cameraMovie_"..waitStep, waitStep, function()
                    Me:changeCameraView({x =v.x,y =v.y,z =v.z}, tonumber(v.yaw), tonumber(v.pitch),0, time or 0)
                end)
            end
            waitStep = waitStep+time
        end

    end
    waitStep = waitStep+1
    World.LightTimer("cameraMovie_last", waitStep, function()
        Blockman.instance:setPersonView(saveCameraMode)
        if cb then
            cb()
        end
    end)
end
