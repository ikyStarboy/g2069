---
--- Generated by PluginCreator
--- game_business handler
--- DateTime:2023-04-10
---

---@type WalletSystem
local WalletSystem = T(Lib, "WalletSystem")
---@type ShopConfig
local ShopConfig = T(Config, "ShopConfig")
---@type PlayerDataHelper
local PlayerDataHelper = T(Lib, "PlayerDataHelper")
---@type RewardHelper
local RewardHelper = T(Lib, "RewardHelper")
---@type BusinessSystem
local BusinessSystem = T(Lib, "BusinessSystem")
---@type InventorySystem
local InventorySystem = T(Lib, "InventorySystem")
---@type ItemConfig
local ItemConfig = T(Config, "ItemConfig")
---@type BattleManagerServer
local BattleManagerServer = require "server.manager.battle_manager"
local handles = T(Player, "PackageHandlers")
--function handles:Xxxxx(packet)
--end


--- 商店购买
---@param packet any
function handles:C2SShopBuy(packet)
    ---@type Entity
    local player = self
    local shopId = packet.shopId
    local stateCode = 0

    local config = ShopConfig:getCfgByShopId(shopId)
    if not config then
        stateCode = 1
    elseif not BusinessSystem:checkCanPurchase(player, shopId) then
        stateCode = 2
    else
        local cost = config.cost
        local coinName = cost.item_alias
        local coinNum = cost.item_num
        if WalletSystem:getCoin(player, coinName) < coinNum then
            stateCode = 3
        else
            if coinName == Define.ITEM_ALIAS.GOLDEN_CUBE then
                InventorySystem.MODIFY_SOURCE = Define.ITEM_REWARD_SOURCE[Define.REWARD_TYPE.SHOP_BUY]
                WalletSystem:payCube(player, "shop_buy_" .. shopId, coinNum, function(success)
                    InventorySystem.MODIFY_SOURCE = nil
                    if not player or not player:isValid() then
                        return stateCode
                    end
                    if success then
                        BusinessSystem:addPurchaseData(player, shopId)
                        PlayerDataHelper:savePurchaseData(player)
                        --- 获取奖励
                        local flag, rewards = RewardHelper:gainShopBuyRewards(player, shopId)
                        --- 判断立刻使用中是否有永久能力
                        if flag and config.is_use == 1 and rewards and #rewards > 0 then
                            local alias = rewards[1].item_alias
                            local itemConfig = ItemConfig:getCfgByItemAlias(alias)
                            --- 若是永久能力
                            if itemConfig.type_alias == Define.ITEM_TYPE.ABILITY_BOOK then
                                if BattleManagerServer:instance():switchAbilityByAbilityId(player, itemConfig.params["ability_id"]) then
                                    PlayerDataHelper:saveAbilityData(player, true)
                                end
                            end
                        end
                    else
                        stateCode = 4
                    end

                    if stateCode == 0 then
                        Lib.emitEvent(Event.EVENT_GAME_BUSINESS_SHOP_BUY, player, shopId, true)
                    end

                    player:sendPacket({
                        pid = "S2CShopBuy",
                        stateCode = stateCode,
                        shopId = shopId,
                        purchaseData = BusinessSystem:getPurchaseData(player, shopId),
                    })
                end, 1, "shop_buy_" .. shopId)

                return stateCode
            else
                BusinessSystem:addPurchaseData(player, shopId)
                PlayerDataHelper:savePurchaseData(player)
                
                InventorySystem.MODIFY_SOURCE = Define.ITEM_REWARD_SOURCE[Define.REWARD_TYPE.SHOP_BUY]
                --- 购买商品
                WalletSystem:payCoin(player, coinName, coinNum, false, false, "shop_buy_" .. shopId, nil)
                InventorySystem.MODIFY_SOURCE = nil
                --- 获取奖励
                local flag, rewards = RewardHelper:gainShopBuyRewards(player, shopId)
                --- 判断立刻使用中是否有永久能力
                if flag and config.is_use == 1 and rewards and #rewards > 0 then
                    local alias = rewards[1].item_alias
                    local itemConfig = ItemConfig:getCfgByItemAlias(alias)
                    --- 若是永久能力
                    if itemConfig.type_alias == Define.ITEM_TYPE.ABILITY_BOOK then
                        if BattleManagerServer:instance():switchAbilityByAbilityId(player, itemConfig.params["ability_id"]) then
                            PlayerDataHelper:saveAbilityData(player, true)
                        end
                    end
                end
            end
        end
    end

    if stateCode == 0 then
        Lib.emitEvent(Event.EVENT_GAME_BUSINESS_SHOP_BUY, player, shopId, true)
    end

    player:sendPacket({
        pid = "S2CShopBuy",
        stateCode = stateCode,
        shopId = shopId,
        purchaseData = BusinessSystem:getPurchaseData(player, shopId),
    })
    return stateCode
end
