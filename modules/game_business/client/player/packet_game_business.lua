---
--- Generated by PluginCreator
--- game_business handler
--- DateTime:2023-04-10
---

local handles = T(Player, "PackageHandlers")
--function handles:Xxxxx(packet)
--end

---@type ShopConfig
local ShopConfig = T(Config, "ShopConfig")

---@type BusinessSystem
local BusinessSystem = T(Lib, "BusinessSystem")

---@type InventorySystem
local InventorySystem = T(Lib, "InventorySystem")
---@type ItemConfig
local ItemConfig = T(Config, "ItemConfig")
---@type AbilitySystem
local AbilitySystem = T(Lib, "AbilitySystem")

---@type BattleManagerClient
local BattleManagerClient = require "client.manager.battle_manager"

--- 购买回调
---@param packet any
function handles:S2CShopBuy(packet)
    ---@type Entity
    local player = self
    local shopId = packet.shopId
    local stateCode = packet.stateCode
    local purchaseData = packet.purchaseData
    if stateCode == 0 then
        BusinessSystem:setPurchaseData(player, shopId, purchaseData)

        Lib.emitEvent(Event.EVENT_GAME_BUSINESS_SHOP_BUY, player, shopId, true)
        
        local config = ShopConfig:getCfgByShopId(shopId)
        if config then
            if config.is_use == 1 then
                local item = config.item
                local item_alias = item.item_alias
                local itemConfig = ItemConfig:getCfgByItemAlias(item_alias)
                --- 若是永久能力
                if itemConfig.type_alias == Define.ITEM_TYPE.ABILITY_BOOK then
                    local abilityId = itemConfig.params["ability_id"]
                    if BattleManagerClient:instance():switchAbilityByAbilityId(player, abilityId) then
                        local ability = InventorySystem:getItemByItemId(player, Define.INVENTORY_TYPE.ABILITY, abilityId)
                        local name = ability:getName()
                        local qualityColor = Define.ITEM_QUALITY_FONT_COLOR[itemConfig.quality_alias]
                        if qualityColor then
                            local color = string.format("[colour='%s']", qualityColor)
                            name = color .. Lang:toText(name)
                        end
                        Me:showGameTopTips(Lang:toText({ "g2069_use_ability_success", name }))
                        return
                    end
                end
            end

            if config.shop_name then
                local item = config.item
                local itemConfig = ItemConfig:getCfgByItemAlias(item.item_alias)
                local name = config.shop_name
                if itemConfig then
                    local qualityColor = Define.ITEM_QUALITY_FONT_COLOR[itemConfig.quality_alias]
                    if qualityColor then
                        local color = string.format("[colour='%s']", qualityColor)
                        name = color .. Lang:toText(name)
                    end
                end
                local text = Lang:toText({ "g2069_gain_reward_tips", name })
                if item.item_num > 1 then
                    local color2 = string.format("[colour='%s']", World.cfg.fly_new_tipsSetting.textColours)
                    text = text  .. color2 .. "+" .. item.item_num
                end
                Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", text)
                return
            end
        end

        player:showGameTopTips(Lang:toText("g2069_shop_buy_success"))
    else
        Lib.emitEvent(Event.EVENT_GAME_BUSINESS_SHOP_BUY, player, shopId, false)
        player:showGameTopTips(Lang:toText("g2069_shop_buy_fail"))
    end
end
