---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/7/8 17:28
---
local FriendUtils = T(Lib, "FriendUtils")
local FriendSpecialData = T(Lib, "FriendSpecialData")
local FriendGameStatus = Define.FriendGameStatus
local cjson = require "cjson"

function FriendUtils:encodeFriendGameData(friendDataList)
    for i, v in pairs(friendDataList) do
        if v.gameData and v.gameData ~= "" and type(v.gameData) == "string" then
            v.gameData = cjson.decode(v.gameData)
        end
    end
end

function FriendUtils:isCanFollowFriend(userId, gameData) --gameData 好友的自定义数据
    if gameData and gameData ~= "" then
        local gameStatus = gameData.gameStatus
        if gameStatus then
            if gameStatus == FriendGameStatus.Hall then
                return true
            end
            return false
        end
    end
    --没有传好友的自定义数据就读取本地缓存的
    local specialData = FriendSpecialData:getClientSpecialData(userId)
    if specialData and specialData.gameStatus == FriendGameStatus.Hall then
        return true
    end
    return false
end

function FriendUtils:setAddFriendBtnStatus(btn, userId)
    if userId == Me.platformUserId then
        btn:setVisible(false)
        return
    end
    local isFriend = Me:checkPlayerIsMyFriend(userId) ~= Define.friendStatus.notFriend
    if isFriend then
        btn:setVisible(false)
    else
        btn:setVisible(true)
        if not FriendManager.CanAddFriend(userId) then
            btn:setEnabled(false)
            btn:setText(Lang:toText("g2060_friend_invite_in_progress"))
        else
            btn:setEnabled(true)
            btn:setText(Lang:toText("new.chat.player_addFriend"))
        end
    end
end

function FriendUtils:setFollowBtn(userId, btn, gameData)
    if self:isCanFollowFriend(userId, gameData) then
        btn:setVisible(true)
    else
        btn:setVisible(false)
    end
end

function FriendUtils:sendAddFriend(userId, btn)
    if not FriendManager.CanAddFriend(userId) or userId == Me.platformUserId then
        return
    end
    local opType = FriendManager.operationType.ADD_FRIEND
    Me:friendRequestReport(opType, userId, true)
    AsyncProcess.FriendOperation(FriendManager.operationType.ADD_FRIEND, userId)
    FriendManager.UpdateCdTime(userId, FriendManager.operationType.ADD_FRIEND)
    if btn then
        self:setAddFriendBtnStatus(btn, userId)
    end
    Me:showGameTopTips(Lang:toText({"new.chat.invite.succ"}))
end

function FriendUtils:setPlayerStatusText(userId, staticText, playerData)
    local isOffline = playerData.status == Define.onlineStatus.offline
    staticText:setVisible(true)
    if isOffline then
        staticText:setText(FriendUtils:getLastLoginTimeStr(playerData.logoutTime))
        staticText:setProperty("TextColours", "FF4c4b4a")
    else
        local gameStatus
        if playerData.gameData and playerData.gameData ~= "" then
            gameStatus = playerData.gameData.gameStatus
        end
        if not gameStatus then
            local specialData = FriendSpecialData:getClientSpecialData(userId) or {}
            gameStatus = specialData.gameStatus
        end
        if gameStatus then
            if gameStatus == FriendGameStatus.Hall then
                staticText:setText(Lang:toText("g2060_friend_in_hall"))
                staticText:setProperty("TextColours", "FFFFFFFF")
            elseif gameStatus == FriendGameStatus.PartyGame then
                staticText:setText(Lang:toText("g2060_friend_in_party_game"))
                staticText:setProperty("TextColours", "FFFFFFFF")
            else
                staticText:setText(Lang:toText("g2060_friend_can_not_follow"))
                staticText:setProperty("TextColours", "FFFFFFFF")
            end
        else
            staticText:setText(Lang:toText("new.chat.status.online"))
            staticText:setProperty("TextColours", "FF00FF00")
        end
    end
end

function FriendUtils:setPlayerIntroductionText(userId, gameData)
    if not gameData then
        gameData = FriendSpecialData:getClientSpecialData(userId) or {}
    end
end

function FriendUtils:getLastLoginTimeStr(time)
    local seconds = os.time() - time * 0.001
    if seconds <= 0 then
        return ""
    end
    local hour = math.floor(seconds / 3600)
    local minute = math.floor((seconds % 3600) / 60)
    local returnStr = ""
    if hour >= 168 then
        returnStr = Lang:toText({"g2060_friend_last_login_day_time", 7})
    elseif hour >= 72 and hour < 168 then
        returnStr = Lang:toText({"g2060_friend_last_login_day_time", 3})
    elseif hour >= 48 and hour < 72 then
        returnStr = Lang:toText({"g2060_friend_last_login_day_time", 2})
    elseif hour >= 24 and hour < 48 then
        returnStr = Lang:toText({"g2060_friend_last_login_day_time", 1})
    elseif hour >= 12 and hour < 24 then
        returnStr = Lang:toText({"g2060_friend_last_login_hour_time", 12})
    elseif hour >= 6 and hour < 12 then
        returnStr = Lang:toText({"g2060_friend_last_login_hour_time", 6})
    elseif hour >= 3 and hour < 6 then
        returnStr = Lang:toText({"g2060_friend_last_login_hour_time", 3})
    elseif hour >= 1 and hour < 3 then
        returnStr = Lang:toText({"g2060_friend_last_login_hour_time", 1})
    elseif minute >= 30 and hour == 0 then
        returnStr = Lang:toText({"g2060_friend_last_login_minute_time", 30})
    elseif minute >= 10 and minute < 30 then
        returnStr = Lang:toText({"g2060_friend_last_login_minute_time", 10})
    else
        returnStr = Lang:toText("g2060_friend_last_login_just_time")
    end
    return returnStr
end