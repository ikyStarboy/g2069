---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/3/9 16:17
---

---@class SceneRankUIHelper
local SceneRankUIHelper = T(Lib, "SceneRankUIHelper")

function SceneRankUIHelper:init()
    self.sceneRankUIList={}
end

local function getVectorFromString(str)
    if not str then
        return {}
    end
    local result={}
    for _,v in string.gmatch(str,"(%a):(%g+)") do
        --print("----------->>>>>",tonumber(v))
        table.insert(result,tonumber(v) or 0)
    end
    return result
end

function SceneRankUIHelper:openSceneRankUI(objID)
    local entity = World.CurWorld:getEntity(objID)
    if not entity or not entity:isValid() or not entity:cfg().isRankBoard then
        return
    end
    local ui_offset={0,3.6,-0.2}
    local ui_rotation=0
    local ui_size=1.3
    local entity_scale={2.3,2,2}
    local rankScentUI=World.cfg.rankSetting.rankScentUI
    if rankScentUI then
        if rankScentUI.ui_offset then
            ui_offset=rankScentUI.ui_offset
        end
        if rankScentUI.ui_rotation then
            ui_rotation=rankScentUI.ui_rotation
        end
        if rankScentUI.ui_size then
            ui_size=rankScentUI.ui_size
        end
        if rankScentUI.entity_scale then
            entity_scale=rankScentUI.entity_scale
        end
    end

    entity:scaleObject(Lib.v3(entity_scale[1],entity_scale[2],entity_scale[3]))
    --print("+++++++++++++++++++++++++++ openSceneRankUI",objID,entity.name,Lib.v2s(ui_offset),ui_size,ui_rotation)
    local args = {
        position = Vector3.new(ui_offset[1] or 0, ui_offset[2] or 0, ui_offset[3] or 0),
        rotation = Vector3.new(0, math.rad(ui_rotation), 0),
        width = ui_size*5.94,
        height = ui_size*2.72,
        objID = entity.objID,
        flags = 16
    }
    UI:openSceneWindow("UI/rank/gui/win_top3","win_top3"..objID,args,"asset")
    self.sceneRankUIList[objID]=true
end

function SceneRankUIHelper:closeSceneRankUI(objID)
    if self.sceneRankUIList[objID] then
        --print("------------------------- closeSceneRankUI",objID)
        UI:closeSceneWindow("win_top3" .. objID)
        self.sceneRankUIList[objID]=nil
    end
end

--function SceneRankUIHelper:openSceneRankUI(part)
--    --print("+++++++++++++++++++++++++++ openSceneRankUI",part.runtimeId,part.name,Lib.v2s(part.attributes))
--    local ui_offset=getVectorFromString(part.attributes.ui_offset)
--    local ui_rotation=tonumber(part.attributes.ui_rotation) or 0
--    local ui_size=tonumber(part.attributes.ui_size) or 1
--    print("+++++++++++++++++++++++++++ openSceneRankUI,ui_offset,ui_rotation,ui_size",part.name,Lib.v2s(ui_offset),ui_rotation,ui_size)
--
--    local args = {
--        position = part:getPosition()+Vector3.new(ui_offset[1] or 0, ui_offset[2] or 0, ui_offset[3] or 0),
--        rotation = Vector3.new(0, math.rad(ui_rotation), 0),
--        width = ui_size*5.94,
--        height = ui_size*2.72,
--        --objID = part.runtimeId,
--        flags = 0
--    }
--    --local sceneWindow, sceneInstance=
--    UI:openSceneWindow("UI/rank/gui/win_top3","win_top3"..part.runtimeId,args,"asset")
--    self.sceneRankUIList[part.runtimeId]=true
--end
--
--function SceneRankUIHelper:closeSceneRankUI(part)
--    if part and self.sceneRankUIList[part.runtimeId] then
--        --print("------------------------- closeSceneRankUI",part.runtimeId)
--        UI:closeSceneWindow("win_top3" .. part.runtimeId)
--        self.sceneRankUIList[part.runtimeId]=nil
--    end
--end

SceneRankUIHelper:init()
