---
--- Generated by PluginCreator
--- connector mainLua
--- DateTime:2021-10-20
---

require "common.i_connector_filter"
if World.isClient then
    require "client.gm_connector"
	require "client.connector_center"
	require "client.connector_player_packet"
else
    require "server.gm_connector"
	require "server.connector_center"
end

local handlers = {}

if World.isClient then
	function handlers.start()
		---@type CConnectorCenter
		local CConnectorCenter = T(Lib, "ConnectorCenter")
		CConnectorCenter:start()
	end
else
	function handlers.start()
		---@type SConnectorCenter
		local SConnectorCenter = T(Lib, "ConnectorCenter")
		SConnectorCenter:start()
	end
end

--[[
	发送信息给gateWay 使用  Lib.emitEvent(Event.EVENT_CONNECTOR_MSG, data)
	data = {
		type = 10000 ---协议Id
		userId = 10086 --- 玩家id
		data = {}	--- 数据
	}

	------------------------------------------------------------

	发送消息给gateWay 可以增加过滤器，
	---@type ConnectorFilter
	local ConnectorFilter = T(Lib, "ConnectorFilter")
	ConnectorFilter:registerFunc(type, func, ...)

	type 要过滤的协议
	func 接受的函数
	... 自定义参数

	func 收到的参数 ...(自定义参数) , type, targets, data
	返回参数 false, true	返回true则表示该信息不发到gateWay

	------------------------------------------------------------

	接受消息
	---@type IConnectorDispatch
	local ConnectorDispatch = T(Lib, "ConnectorDispatch")
	ConnectorDispatch:registerFunc(type, func, ...)

	type 接受的协议
	func 接受的函数
	... 自定义参数

	func 收到的参数 ...(自定义参数) , type, targets, data
	返回参数 false, true	返回true则表示该信息不下发到客户端
]]

--function handlers.openXXXWnd()
	--TODO
--end

return function(name, ...)
	if type(handlers[name]) ~= "function" then
		return
	end
	return handlers[name](...)
end
