---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2021/4/21 20:34
---

---@class ConnectorCenter
---@field sendMsg fun(self : ConnectorCenter, type : number, data : string | table) CConnectorCenter
---@field sendMsg fun(self : ConnectorCenter, type : number, userId : number, data : string | table) SConnectorCenter
local ConnectorCenter = T(Lib, "ConnectorCenter")
ConnectorCenter.isDebug = false
---@type IConnectorDispatch
local IConnectorDispatch = T(Lib, "ConnectorDispatch")
---@type table<number, number>
local FakeId2UserId = T(ConnectorCenter, "FakeId2UserId")
---@type function
local v_type = type

local cjson = require "cjson"

---@param type number 消息类型
---@param targets number[] 接收目标userId列表
---@param data string 接收数据
function ConnectorCenter:onMsgReceive(type, targets, data)
    if ConnectorCenter.isDebug then
        Lib.logInfo("[ConnectorCenter:onMsgReceive] type=" .. type)
        Lib.logInfo("[ConnectorCenter:onMsgReceive] targets=" .. Lib.a2s(targets))
    end
    if not World.isClient and PlatformUtil.isPlatformWindows() then
        for i = #targets, 1, -1 do
            local uid = FakeId2UserId[targets[i]]
            if Lib.tableContain(targets, uid) then
                table.remove(targets, i)
            else
                targets[i] = uid or targets[i]
            end
        end
        if ConnectorCenter.isDebug then
            Lib.logInfo("[ConnectorCenter:onMsgReceive] targets=" .. Lib.a2s(targets))
        end
    end
    if ConnectorCenter.isDebug then
        if v_type(data) == "string" then
            Lib.logInfo("[ConnectorCenter:onMsgReceive] data=" .. data)
        else
            Lib.logInfo("[ConnectorCenter:onMsgReceive] data=" .. cjson.encode(data))
        end
    end
    if not World.isClient and PlatformUtil.isPlatformWindows() and v_type(data) == "string" then
        for fid, uid in pairs(FakeId2UserId) do
            data = data:gsub(fid, uid)
        end
        if ConnectorCenter.isDebug then
            Lib.logInfo("[ConnectorCenter:onMsgReceive] data=" .. data)
        end
    end
    IConnectorDispatch:onMsgReceive(type, targets, data)
end
