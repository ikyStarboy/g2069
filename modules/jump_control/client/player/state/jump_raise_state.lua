---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangpq.
--- DateTime: 2020/4/23 14:57
---
local misc = require("misc")
local class = require "common.class"
---@type AttributeSystem
local AttributeSystem = T(Lib, "AttributeSystem")

local JumpState = require "client.player.state.jump_state"
local JumpRaiseState = class("JumpRaiseState", JumpState)

function JumpRaiseState:enter(owner)
    --print("JumpRaiseState:enter")
    
    --owner:setEntityProp("jumpSpeed", tostring(AttributeSystem:getAttributeValue(owner, Define.ATTR.JUMP_SPEED)))

    owner.jumpRaiseEnd = false

    local skillId = owner:getJumpSkillId()
    owner:clientFreeGameSkill(skillId)
    --owner:updateUpperAction("g2033_train_jump02", -1, true)
    --Skill.Cast("myplugin/jump_skill" .. 2)

    self:doJump(owner)
end

function JumpRaiseState:doJump(owner)
    if owner.startJumpPosy == -99999 then
        owner.startJumpPosy = owner:curBlockPos().y
    end
    owner:enterStateType(Define.RoleStatus.JUMP)
    owner:decJumpCount()
    Blockman.Instance():control():jump()
    owner.lockKeyJump = true
    --Lib.emitEvent(Event.EVENT_PLAY_SOUND, "player_jump")
    Me:playerSoundAndBroadcast("player_jump")
    Me:setPlayerActionInf(nil)
end

function JumpRaiseState:update(owner)

    ---最高点
    if not owner.onGround and owner.jumpLastMotionY > 0 and owner.motion.y <= 0 then
        owner.lockKeyJump = false
        owner:changeJumpState("JumpFloatState")
    end
    owner.jumpLastMotionY = owner.motion.y
end

function JumpRaiseState:leave(owner)
    --print("JumpRaiseState:leave")
end

return JumpRaiseState