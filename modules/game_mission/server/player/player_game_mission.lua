---
--- Generated by PluginCreator
--- game_mission player
--- DateTime:2023-06-14
---

local Player = Player

---@type MissionInfoConfig
local MissionInfoConfig = T(Config, "MissionInfoConfig")
---@type GrowthSystem
local GrowthSystem = T(Lib, "GrowthSystem")
---@type InventorySystem
local InventorySystem = T(Lib, "InventorySystem")
---@type ItemConfig
local ItemConfig = T(Config, "ItemConfig")
---@type WalletSystem
local WalletSystem = T(Lib, "WalletSystem")
---@type PlayerDataHelper
local PlayerDataHelper = T(Lib, "PlayerDataHelper")


-- 检测可邀请进入副本的玩家
function Player:checkCanSelectMissionTeammate(missionId)
    local missionCfg = MissionInfoConfig:getCfgByMissionId(missionId)
    local players = Game.GetAllPlayers()
    local playerList = {}
    for _, player in pairs(players) do
        if player.platformUserId ~= self.platformUserId then
            local missionCountInfo = player:getMissionCountInfo()
            local temp = {
                userId = player.platformUserId,
                isInMission = player:isInMissionRoom() or player:isInMissionPreState(),
                remainCounts = missionCountInfo[missionCfg.mission_group] or 0,
                level =  GrowthSystem:getLevel(player),
                playerName = player.name,
            }
            table.insert(playerList, temp)
        end
    end
    self:sendPacket({
        pid = "S2CMissionTeammateCanSelect",
        missionId = missionId,
        playerList = playerList
    })
end

function Player:checkOpenMissionTeleport(missionCfg, isOwner)
    if self:isInMissionRoom() then
        return false
    end

    if self:isInMissionPreState() then
        return false
    end

    local missionCountInfo = self:getMissionCountInfo()
    local remainCounts = missionCountInfo[missionCfg.mission_group] or 0
    if remainCounts <= 0 then
        return false
    end

    local level = GrowthSystem:getLevel(self)
    if isOwner then
        if (level < missionCfg.open_level_range[1]) or ((level > missionCfg.open_level_range[2])) then
            return false
        end
    else
        if (level < missionCfg.join_level_range[1]) or ((level > missionCfg.join_level_range[2])) then
            return false
        end
    end
    return true
end

-- 开启副本传送阵
function Player:doOpenMissionTeleport(missionMode, missionId, selectUserList)
    local missionCfg = MissionInfoConfig:getCfgByMissionId(missionId)

    if not self:checkOpenMissionTeleport(missionCfg, true) then
        Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_start_mission_fail_tips", self)
        return
    end

    if selectUserList then
        for _, userId in pairs(selectUserList) do
            local target = Game.GetPlayerByUserId(userId)
            if target and target:isValid() then
                if not target:checkOpenMissionTeleport(missionCfg) then
                    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_start_mission_fail_tips", self)
                    return
                end
            else
                Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_start_mission_fail_tips", self)
                return
            end
        end
    end

    if self:canOpenMission(missionId) then
        local enough = true
        -- 消耗成功，可开启副本传送阵
        if missionCfg.costs then
            for _, item in pairs(missionCfg.costs) do
                local amount
                if item.item_alias == Define.ITEM_ALIAS.GOLD_COIN then
                    amount = WalletSystem:getCoin(self, Define.ITEM_ALIAS.GOLD_COIN)
                else
                    local config = ItemConfig:getCfgByItemAlias(item.item_alias)
                    local inventoryType = Define.ITEM_INVENTORY_TYPE[config.type_alias]
                    amount = InventorySystem:getItemAmountByItemId(self, inventoryType, config.item_id)
                end
                if amount < item.item_num then
                    enough = false
                    break
                end
            end
        end

        if enough then
            --- 处理消耗
            if missionCfg.costs then
                InventorySystem.MODIFY_SOURCE = "mission_cost"
                local saveInventory = false
                for _, item in pairs(missionCfg.costs) do
                    if item.item_alias == Define.ITEM_ALIAS.GOLD_COIN then
                        WalletSystem:payCoin(self, Define.ITEM_ALIAS.GOLD_COIN, item.item_num, false, false, "open_mission")
                    else
                        saveInventory = true
                        local config = ItemConfig:getCfgByItemAlias(item.item_alias)
                        local inventoryType = Define.ITEM_INVENTORY_TYPE[config.type_alias]
                        ---@type boolean
                        ---@type Item
                        ---@type number
                        ---@type Slot
                        local _success, _item, _slotIndex, _slot = InventorySystem:changeItemNumByItemId(self, inventoryType, config.item_id, -item.item_num)
                        if _success then
                            --- 同步数据
                            self:sendPacket({
                                pid = "S2CUpdateInventorySingle",
                                item = _item:serialize(),
                                amount = _slot:getAmount(),
                                slot_idx = _slotIndex,
                                inv_type = inventoryType,
                            })
                        end
                    end
                end
                InventorySystem.MODIFY_SOURCE = nil
                if saveInventory then
                    PlayerDataHelper:saveInventoryData(self, true)
                end
            end
            --- 扣除副本次数
            self:doCostMissionCounts(missionId, 1)
            --- 创建房间
            ---@type MissionManagerServer
            local MissionManagerServer = require "server.manager.mission_manager"
            ---@type MissionRoom
            local room = MissionManagerServer:instance():createRoom(self, missionId, missionMode, selectUserList)
            
            return
        end
    end

    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_start_mission_fail_tips", self)
end

-- 扣除副本次数
function Player:doCostMissionCounts(missionId, num)
    local missionCfg = MissionInfoConfig:getCfgByMissionId(missionId)
    local missionCountInfo = self:getMissionCountInfo()
    if missionCountInfo[missionCfg.mission_group] then
        missionCountInfo[missionCfg.mission_group] = missionCountInfo[missionCfg.mission_group] - (num or 1)
    else
        missionCountInfo[missionCfg.mission_group] = 0
    end
    if missionCountInfo[missionCfg.mission_group] < 0 then
        missionCountInfo[missionCfg.mission_group] = 0
    end
    self:setMissionCountInfo(missionCountInfo)
end