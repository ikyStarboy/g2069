---
--- Generated by PluginCreator
--- game_mission mainLua
--- DateTime:2023-06-14
---

require "common.entity_game_mission"
require "common.event_game_mission"
require "common.define_game_mission"

require "common.config.mission_info_config"
require "common.config.mission_stage_info_config"
require "common.config.mission_stage_wave_info_config"

if World.isClient then
    require "client.player.player_game_mission"
    require "client.player.packet_game_mission"
    require "client.entity.entity_game_mission"
    require "client.entity.entity_value_func_game_mission"
    require "client.gm_game_mission"
else
    require "server.player.player_game_mission"
    require "server.player.packet_game_mission"
    require "server.entity.entity_game_mission"
    require "server.helper.game_mission_gm_helper"
    require "server.gm_game_mission"

    --- 初始化管理器
    local initManager = function()
        ---@type MissionManagerServer
        local MissionManagerServer = require "server.manager.mission_manager"
        MissionManagerServer:instance():init()
    end
    initManager()
end

local handlers = {}

--function handlers.openXXXWnd()
	--TODO
--end

if World.isClient then

else
    ---@type MissionManagerServer
    local MissionManagerServer = require "server.manager.mission_manager"
    ---@type PlayerBornConfig
    local PlayerBornConfig = T(Config, "PlayerBornConfig")

    ---@param context any
    function handlers.ENTITY_ENTER(context)
        ---@type Entity
        local entity = context.obj1
        if not entity or not entity:isValid() then
            return
        end
        if entity.isPlayer then
            MissionManagerServer:instance():onEntityEnter(entity)
        end
    end

    --- 退出
    ---@param context any
    function handlers.ENTITY_LEAVE(context)
        ---@type Entity
        local entity = context.obj1
        if not entity or not entity:isValid() or not entity:isInMissionRoom() then
            return
        end
        MissionManagerServer:instance():onEntityLeave(entity)
    end

    --- 判断是否死亡退出
    ---@param entity Entity
    function handlers.deadQuitMission(entity)
        if entity.isPlayer then
            if MissionManagerServer:instance():onPlayerQuit(entity) then
                return true
            end
        end
        return false
    end

    --- 回到出生点
    ---@param entity Entity
    function handlers.backBornPosition(entity)
        if entity.isPlayer and entity:isInMissionRoom() then
            local roomId = entity:getMissionRoomId()
            if roomId then
                ---@type MissionRoom
                local room = MissionManagerServer:instance():getRoom(roomId)
                if room then
                    --- 回到当前地图
                    local map = entity.map
                    local config = PlayerBornConfig:getCfgByMapName(map.name)
                    entity:setMapPos(map, config.bornPosition)   
                    return
                end
            end
            Plugins.CallTargetPluginFunc("game_role_common", "gotoMap", entity, entity:getCurMap())
        elseif entity:isMissionMonster() then
            local bornPos = entity:data("main").regionBirthPos
            local map = entity.map
            entity:setMapPos(map, bornPos)
        end
    end
end

return function(name, ...)
	if type(handlers[name]) ~= "function" then
		return
	end
	return handlers[name](...)
end
