---
--- Generated by PluginCreator
--- engine_overwrite entity
--- DateTime:2023-02-24
---

local Entity = Entity
local EntityClient = EntityClient
---@type MonsterConfig
local MonsterConfig = T(Config, "MonsterConfig")
---@type NpcConfig
local NpcConfig = T(Config, "NpcConfig")
---@type ActionMapHelper
local ActionMapHelper = T(Lib, "ActionMapHelper")

local engine_onCreate = Entity.onCreate
function Entity:onCreate()
    if engine_onCreate then
        engine_onCreate(self)
    end
    self:onCreateExtend()
end

--- onCreate拓展，空方法
function Entity:onCreateExtend()
    
end

local oldUpdateShowName = EntityClient.updateShowName
function EntityClient:updateShowName()
    oldUpdateShowName(self)
    local headTextHeight = self:cfg().headTextHeight
    if self:isMonster() then
        local monsterName = nil
        --- 副本怪物特殊处理
        if self:isMissionMonster() then
            local data = self:getMissionMonsterData()
            if data and data.ownerName and data.ownerName ~= "" then
                monsterName = "[C=FFFF0000]" .. tostring(data.ownerName)
            end
        end
        if not monsterName then
            local monsterId = self:getMonsterId()
            local config = MonsterConfig:getCfgByMonsterId(monsterId)
            monsterName = "Lv." .. config.monsterLevel .. " " .. Lang:toText(config.monsterName)
        end
        if ActionMapHelper:checkIsNearEntity(self.objID) then
            self:setShowName(monsterName, World.cfg.headFont or "HT24", headTextHeight)
        else
            self:setShowName("", World.cfg.headFont or "HT24", headTextHeight)
        end
        self:setName(monsterName, monsterName)
    elseif self:isNPC() then
        local npcId = self.name
        local config = NpcConfig:getCfgById(npcId)
        if config then
            local iColor = "[C=FF00FF7F]"
            local npcName = iColor .. Lang:toText(config.npcShowName)
            -- if config.npcShowIcon ~= "" then
            --     npcName = "[P=" .. config.npcShowIcon .. "]" .. "\n" .. npcName
            -- end
            self:setShowName(npcName, World.cfg.headFont or "HT24", headTextHeight)
            if config.npcShowIcon ~= "" then
                self:showNpcTaskTip()
            end
        end
    elseif self.isPlayer then
        local initName = self.name
        local safeType = self:getSafeModeType()
        if self.objID ~= Me.objID then
            local curLevel = self:getCurLevel()
            initName =  "Lv." .. curLevel .. " " .. initName
        end
        if safeType == Define.PKModeType.pk1 then
            local showName = ""
            local iColor = "[C=FFFFA500]"
            showName = iColor .. initName
            self:setShowName(showName, World.cfg.headFont or "HT24", headTextHeight)
        elseif safeType == Define.PKModeType.pk2 then
            local showName = ""
            local pkIcon = "asset/imageset/image/img_0_pk.png"
            showName = showName .. "[P=" .. pkIcon .. "]" .. "\n"
            local iColor = "[C=FFFF0000]"
            showName = showName .. iColor .. initName
            self:setShowName(showName, World.cfg.headFont or "HT24", headTextHeight)
        else
            self:setShowName(initName, World.cfg.headFont or "HT24", headTextHeight)
        end
    end
end

-- 重载引擎的Entity.EntityProp:actionMap
function Entity.EntityProp:actionMap(value, add, buff)
    local actionKey = "buff_" .. buff.id
    local actionPriority = buff.cfg.actionPriority or 0
    ---@type ActionMapHelper
    local ActionMapHelper = T(Lib, "ActionMapHelper")
    ActionMapHelper:updateActionMapState(self.objID, value, add, actionKey, actionPriority)
end


function EntityClient:showSkillSceneEffect(effect, cfg, name)
    if not effect or not effect.effect then
        return nil
    elseif effect.selfOnly and not (self:owner():isControl())  and not self:cfg().enablebuffEffect then
        return nil
    end
    if not effect.path then
        cfg = cfg or self:cfg()
        effect.path = ResLoader:filePathJoint(cfg, effect.effect)
    end
    if not name then
        name = self:getEffectName()
    end
    local once = effect.once
    if once==nil then
        once = true
    end
    if effect.time then
        ---@type LuaTimer
        local LuaTimer = T(Lib, "LuaTimer")
        LuaTimer:scheduleTimer(function()
            if self:isValid() then
                self:delEffect(name)
            end
        end, effect.time, 1)
    end
    if not effect.isFixedPosition then
        self:addEffect(name, effect.path, once, effect.pos, effect.yaw, effect.scale or {x = 1, y = 1, z = 1})
    else
        local clonePosition = Vector3.new(effect.pos.x, 0,effect.pos.z)
        local yaw = -self:getBodyYaw()
        local rotation = Vector3.new(0, yaw, 0)
        Lib.rotate(clonePosition, rotation)
        clonePosition.y=effect.pos.y
        local pos = self:getPosition() + clonePosition
        Blockman.instance:playEffectByPos(effect.effect, pos, 360 - self:getBodyYaw() + effect.yaw,
                effect.time or 4000, effect.scale or {x = 1, y = 1, z = 1})
    end
    return name
end