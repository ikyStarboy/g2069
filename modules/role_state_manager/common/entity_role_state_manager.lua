---
--- Generated by PluginCreator
--- role_state_manager entity_common
--- DateTime:2023-03-13
---

---@type RoleStateHelper
local RoleStateHelper = T(Lib, "RoleStateHelper")

local ValueDef = T(Entity, "ValueDef")
-- key				            = {isCpp,	client,	toSelf,	toOther,	init,	               saveDB}
--ValueDef.xxx 					= {false,   false,  true,   false,      0,                      true}
local Entity = Entity


function Entity:enterStateType(stateType, ...)
    RoleStateHelper:enterRoleState(self.objID, stateType, ...)
end

function Entity:exitStateType(stateType, ...)
    RoleStateHelper:exitRoleState(self.objID, stateType, ...)
end

-- 玩家当前状态列表
function Entity:getCurStateList()
    return RoleStateHelper:getRoleStateList(self)
end

-- 是否处于某个状态
function Entity:isInStateType(stateType)
    return RoleStateHelper:isInState(self.objID, stateType)
end

-- 是否处于不能移动的状态
function Entity:isInImmobilityState()
    if self:isInStateType(Define.RoleStatus.DEAD) or
        self:isInStateType(Define.RoleStatus.BLOW_AWAY) or
        self:isInStateType(Define.RoleStatus.KNOCK_DOWN) or
        self:isInStateType(Define.RoleStatus.VERTIGO) or
        self:isInStateType(Define.RoleStatus.FREEZE) or 
        self:isInStateType(Define.RoleStatus.IN_TELEPORT) or
        self:isInStateType(Define.RoleStatus.DRAG) then
        return true
    end
    return false
end

-- 是否处于可攻击状态
---@param attacker Entity 攻击者
---@return boolean true,可攻击，false不可攻击
function Entity:isInCanAttackState(attacker)
    if not self or not self:isValid() then
        return false
    end
    if self:isNPC() then
        return false
    end
    if self.curHp and self.curHp <= 0 then
        return false
    end

    if self:isInStateType(Define.RoleStatus.DEAD) or
            self:isInStateType(Define.RoleStatus.IN_TELEPORT) then
        return false
    end

    if attacker then
        if not attacker:isValid() then
            return false
        end

        if attacker:isMonster() and self:isMonster() then
            return false
        end

        if attacker.isPlayer and self.isPlayer then
            if not attacker:checkCanAttackTargetPlayer(self) then
                if attacker:isInMissionRoom() or self:isInMissionRoom() then
                    return false
                end
                if attacker:isInMissionSafe()  and (self.objID ~= attacker.objID) then
                    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_mission_safe_self", attacker)
                    return false
                end

                if self:isInMissionSafe() and (self.objID ~= attacker.objID) then
                    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_mission_safe_others", attacker)
                    return false
                end

                local safeType1 = attacker:getSafeModeType()
                local safeType2 = self:getSafeModeType()
                if safeType1 == Define.PKModeType.pk1
                        or safeType1 == Define.PKModeType.pk2 then
                    if self:isInSafeRegion() and (self.objID ~= attacker.objID) then
                        Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_safe_region_limit_pk", attacker)
                    end
                end

                if (safeType1 == Define.PKModeType.safe
                        or safeType1 == Define.PKModeType.pkWait)  and (self.objID ~= attacker.objID) then
                    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_safe_left_limit_pk", attacker)
                end

                if (safeType2 == Define.PKModeType.safe
                        or safeType2 == Define.PKModeType.pkWait)  and (self.objID ~= attacker.objID) then
                    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", "g2069_safe_state_limit_pk", attacker)
                end
                return false
            end
        end
    end
    return true
end

-- 是否处于可被追逐状态（怪物追逐玩家）
---@return boolean true,可，false不可
function Entity:isInCanChasedState()
    if not self or not self:isValid() then
        return false
    end
    if not self.isPlayer then
        return false
    end

    if self.curHp and self.curHp <= 0 then
        return false
    end

    if self:isInStateType(Define.RoleStatus.DEAD) or
            self:isInStateType(Define.RoleStatus.IN_TELEPORT) then
        return false
    end
    return true
end