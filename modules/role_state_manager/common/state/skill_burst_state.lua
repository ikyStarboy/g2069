---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/3/17 17:08
---

local RoleStateBase = require "common.state.base_state"

--- @class SkillBurstState : RoleStateBase
local SkillBurstState = Lib.class("SkillBurstState", RoleStateBase)
local socket = require("socket.core")
---@type SkillConfig
local SkillConfig = T(Config, "SkillConfig")

function SkillBurstState:init(type)
    RoleStateBase.init(self, type or Define.RoleStatus.SKILL_BURST_STATE)
end

function SkillBurstState:enterState(objID,skillId,isCharge,chargeTimeRate)
    --print("+++++++++++++++++++++++++ SkillBurstState:enterState ",objID,skillId,isCharge,chargeTimeRate)
    RoleStateBase.enterState(self, objID)
    if  World.isClient then
        local cfg=SkillConfig:getSkillConfig(skillId)
        if not cfg then
            return
        end
        local entity = World.CurWorld:getEntity(objID)
        if entity and entity:isValid() and entity.objID==Me.objID then
            self:stopTimer(entity)
            entity.skillBurstIndex=1
            entity.skillBurstStartTime=socket.gettime()
            entity.skillBurstTimer=World.Timer(1,function()
                if not entity  or not entity:isValid() then
                    return
                end
                if entity.skillBurstIndex>#cfg.skillBurstTimes then
                    entity:exitStateType(Define.RoleStatus.SKILL_BURST_STATE)
                    return
                end
                if socket.gettime()-entity.skillBurstStartTime>=cfg.skillBurstTimes[entity.skillBurstIndex]/1000 then
                    Lib.emitEvent(Event.EVENT_BURST_CAST_SKILL,skillId,entity.skillBurstIndex,isCharge,chargeTimeRate)
                    entity.skillBurstIndex=entity.skillBurstIndex+1
                    --print("----------------------------- Event.EVENT_BURST_CAST_SKILL",skillId,entity.skillBurstIndex)
                end
                return true
            end)
        end
    end
end

function SkillBurstState:exitState(objID)
    --print("============================ SkillBurstState:exitState ",objID)
    RoleStateBase.exitState(self, objID)
    if World.isClient then
        local entity = World.CurWorld:getEntity(objID)
        if entity and entity:isValid() and entity.objID==Me.objID then
            self:stopTimer(entity)
        end
    end
end

function SkillBurstState:stopTimer(entity)
    if entity.skillBurstTimer then
        entity.skillBurstTimer()
        entity.skillBurstTimer=nil
    end
end

return SkillBurstState