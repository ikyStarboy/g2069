---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/3/17 17:08
---

local RoleStateBase = require "common.state.base_state"

--- @class RoleBattleState : RoleStateBase
local RoleBattleState = Lib.class("RoleBattleState", RoleStateBase)
local socket = require("socket.core")
---@type MonsterConfig
local MonsterConfig = T(Config, "MonsterConfig")

function RoleBattleState:init(type)
    RoleStateBase.init(self, type or Define.RoleStatus.BATTLE_STATE)
end

function RoleBattleState:enterState(objID)
    RoleStateBase.enterState(self, objID)
    if not World.isClient then
        local entity = World.CurWorld:getEntity(objID)
        if entity and entity:isValid() then
            if entity:isMonster() then
                --entity:setProp("hideHp", 0)
                local control = entity:getAIControl()
                if control then -- 重置
                    local skillGroup = control:aiData("skillGroup") or {}
                    local record = entity:data(Define.VarKey.SkillCDRecord)
                    for _, skillData in pairs(skillGroup) do
                        record[skillData.skillId] = socket.gettime()
                    end
                end
            end

            if entity:isBossMonster() then
                if entity.cleanHurtRecordTimer then
                    entity.cleanHurtRecordTimer()
                    entity.cleanHurtRecordTimer = nil
                end
            end

            if entity.isPlayer then
                entity:setPlayerIsInBattleState(true)
                if entity.updateBattleStateTimer then
                    entity.updateBattleStateTimer()
                    entity.updateBattleStateTimer=nil
                end
                local time=World.cfg.game_skillSetting.battleStateDuration or 4
                entity.updateBattleStateTimer=World.Timer(20*time,function()
                    if entity  and entity:isValid() then
                        entity:exitStateType(Define.RoleStatus.BATTLE_STATE)
                    end
                end)
            end
        end
    end
end

function RoleBattleState:exitState(objID)
    RoleStateBase.exitState(self, objID)
    if not World.isClient then
        local entity = World.CurWorld:getEntity(objID)
        if entity and entity:isValid() then
            if not entity.isPlayer then
                --entity:setProp("hideHp", 1)
            end

            if entity:isBossMonster() then
                local monsterId = entity:getMonsterId()
                local config = MonsterConfig:getCfgByMonsterId(monsterId)
                if not config then
                    return
                end
                entity.cleanHurtRecordTimer = entity:lightTimer("AIStateMachine:startAI", config.cleanHurtTime*20, function()
                    if entity and entity:isValid() then
                        entity:resetHurtRecord()
                    end
                end)
            end

            if entity.isPlayer then
                entity:setPlayerIsInBattleState(false)
            end
        end
    end
end

return RoleBattleState