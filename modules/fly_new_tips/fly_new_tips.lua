---
--- Generated by PluginCreator
--- fly_new_tips mainLua
--- DateTime:2023-04-17
---

require "common.entity_fly_new_tips"
require "common.event_fly_new_tips"
require "common.define_fly_new_tips"
if World.isClient then
    require "client.fly_new_tips_helper"
    require "client.player.player_fly_new_tips"
    require "client.player.packet_fly_new_tips"
    require "client.entity.entity_fly_new_tips"
    require "client.entity.entity_value_func_fly_new_tips"
    require "client.gm_fly_new_tips"
else
    require "server.player.player_fly_new_tips"
    require "server.player.packet_fly_new_tips"
    require "server.entity.entity_fly_new_tips"
    require "server.gm_fly_new_tips"
end

local handlers = {}

---发送一条飘字文本
function handlers.pushFlyNewTipsText(content, player)
    local itemInfo = { type = Define.FlyNewTipsType.Normal, content = content }
    if World.isClient then
        ---@type FlyNewTipsHelper
        local FlyNewTipsHelper = T(Lib, "FlyNewTipsHelper")
        FlyNewTipsHelper:pushOneFlyNewTipsItem(itemInfo)
    else
        player:pushClientShowOneFlyTips(itemInfo)
    end
end

---广播一条飘字文本
function handlers.boardCastOneFlyNewText(content)
    local itemInfo = { type = Define.FlyNewTipsType.Normal, content = content }
    if World.isClient then
        Me:sendPacket({pid = "RequestBoardFlyNewTips", itemInfo = itemInfo})
    else
        --player:pushClientShowOneFlyTips(itemInfo, true)
        local packet = {
            pid = "SyncClientShowOneFlyTips",
            itemInfo = itemInfo
        }
        WorldServer.BroadcastPacket(packet)
    end
end

---发送一条飘字提示
function handlers.pushFlyNewTipsSpecial(itemInfo, player)
    if World.isClient then
        ---@type FlyNewTipsHelper
        local FlyNewTipsHelper = T(Lib, "FlyNewTipsHelper")
        FlyNewTipsHelper:pushOneFlyNewTipsItem(itemInfo)
    else
        player:pushClientShowOneFlyTips(itemInfo)
    end
end

---广播一条飘字提示
function handlers.boardCastFlyNewTipsSpecial(itemInfo)
    if World.isClient then
        Me:sendPacket({pid = "RequestBoardFlyNewTips", itemInfo = itemInfo})
    else
        --player:pushClientShowOneFlyTips(itemInfo, true)
        local packet = {
            pid = "SyncClientShowOneFlyTips",
            itemInfo = itemInfo
        }
        WorldServer.BroadcastPacket(packet)
    end
end

return function(name, ...)
	if type(handlers[name]) ~= "function" then
		return
	end
	return handlers[name](...)
end
