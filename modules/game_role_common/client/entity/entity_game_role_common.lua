---
--- Generated by PluginCreator
--- game_role_common entity
--- DateTime:2023-03-03
---

---@type AbnormalComponent
local AbnormalComponent = require "common.component.abnormal_component"
---@type InventoryComponent
local InventoryComponent = require "common.component.inventory_component"
---@type EquipmentComponent
local EquipmentComponent = require "common.component.equipment_component"
---@type SkinComponent
local SkinComponent = require "common.component.skin_component"
---@type AttributeComponent
local AttributeComponent = require "common.component.attribute_component"
---@type AbilityComponent
local AbilityComponent = require "common.component.ability_component"
---@type BuffComponent
local BuffComponent = require "common.component.buff_component"
---@type GrowthComponent
local GrowthComponent = require "common.component.growth_component"
---@type BusinessComponent
local BusinessComponent = require "common.component.business_component"
local setting = require "common.setting"
--- @type SoundManager
local SoundManager = T(Lib, "SoundManager")

local Entity = Entity

--- 重载onCreateExtend
function Entity:onCreateExtend()
    if not self.isCompInited then
        self.isCompInited = true
        --- 判断是否玩家
        if self.isPlayer then
            --- 成长组件
            self:addComponent("growth", GrowthComponent:new(self))
            --- 背包组件
            self:addComponent("inventory", InventoryComponent:new(self))
            --- 装备组件
            self:addComponent("equipment", EquipmentComponent:new(self))
            --- 能力组件
            self:addComponent("ability", AbilityComponent:new(self))
            --- 属性组件
            self:addComponent("attribute", AttributeComponent:new(self))
            --- 异常状态组件
            self:addComponent("abnormal", AbnormalComponent:new(self))
            --- buff组件
            self:addComponent("buff", BuffComponent:new(self))
            --- 皮肤组件
            self:addComponent("skin", SkinComponent:new(self))
            --- 交易组件
            self:addComponent("business", BusinessComponent:new(self))
            Lib.emitEvent(Event.EVENT_GAME_ROLE_COMMON_ROLE_CREATE, self, true)
        elseif self:isMonster() then
            --- 属性组件
            self:addComponent("attribute", AttributeComponent:new(self))
            --- 异常状态组件
            self:addComponent("abnormal", AbnormalComponent:new(self))
            --- buff组件
            self:addComponent("buff", BuffComponent:new(self))

            Lib.emitEvent(Event.EVENT_GAME_ROLE_COMMON_ROLE_CREATE, self)
        end
    end
end

--- 闪避时机
---@param attacker Entity 攻击者
---@param data AttackParam 伤害公式数据
function Entity:onDodge(attacker, data)
    if self.objID == Me.objID then
        Plugins.CallTargetPluginFunc("fly_text", "onEntityShowFlyText", self, Define.FlyTextType.MissSelfDamage, "miss")
    else
        Plugins.CallTargetPluginFunc("fly_text", "onEntityShowFlyText", self, Define.FlyTextType.MissDamage, "miss")
    end
end

--- 死亡时机，血量扣为0瞬间就触发
---@param attacker Entity 攻击者
---@param data AttackParam 伤害公式数据
function Entity:onDeadExtend(attacker, data, hitMoveTime)
    self:enterStateType(Define.RoleStatus.DEAD, hitMoveTime, attacker)
    Lib.emitEvent(Event.EVENT_GAME_ROLE_COMMON_ROLE_DEAD, self)
end

--- 引导特效箭头
function Entity:showTaskGuideArrow(isVisible, targetPos)
    if isVisible then
        if self.taskArrowEffect then
            if not self.taskArrowEffect:isValid() then
                self.taskArrowEffect = nil
            end
        end
        if not self.taskArrowEffect then
            local PartCfg = setting:mod("part")
            local cfg = PartCfg:get("myplugin/task_guide_arrow")
            local manager = World.CurWorld:getSceneManager()
            local scene = manager:getOrCreateScene(Me.map.obj)
            local instance = Instance.newInstance(cfg, Me.map)
            instance:setParent(scene:getRoot())
            self.taskArrowEffect = instance
        end

        local origin = self:getPosition()
        local dir = targetPos - origin

        local cyaw = math.atan(dir.z, dir.x)
        local yaw = math.deg(cyaw) - 90

        local arrowPos = Lib.v3(origin.x, origin.y, origin.z)
        local rotationX = 0
        if (origin.y > targetPos.y) and (origin.y - targetPos.y > 5) then
            rotationX = 30
            arrowPos.y = arrowPos.y + 1
        elseif (origin.y < targetPos.y) and (targetPos.y - origin.y > 5) then
            rotationX = -30
        end
        self.taskArrowEffect:setRotation(Lib.v3(rotationX, -yaw,0))
        self.taskArrowEffect:setPosition(arrowPos)
    else
        if self.taskArrowEffect and self.taskArrowEffect:isValid() then
            self.taskArrowEffect:destroy()
        end
        self.taskArrowEffect = nil
    end
end

--- 显示怪物血条UI
function Entity:showMonsterHpBar()
    if not self.monsterHpBar then
        local PartCfg = setting:mod("part")
        local cfg = PartCfg:get("myplugin/scene_ui_hp_bar")
        local newCfg = Lib.copy(cfg)
        if newCfg.properties and newCfg.properties.position then
            local posStr = "x:0 y:" .. self:cfg().textHeight .. "z:0"
            newCfg.properties.position = posStr
        end
        local instance = Instance.newInstance(newCfg)
        instance:setParent(self)
        instance.parentEntityObjID = self.objID
        self.monsterHpBar = instance
    end
end

--- 显示耐力条
function Entity:showStaminaBar()
    if not self.staminaBar then
        local PartCfg = setting:mod("part")
        local cfg = PartCfg:get("myplugin/scene_ui_stamina")
        local instance = Instance.newInstance(cfg)
        instance:setParent(self)
        self.staminaBar = instance
    end
end

--- 显示任务提示
function Entity:showNpcTaskTip()
    if not self:isNPC() then
        return
    end
    if not self.npcTaskTip then
        local PartCfg = setting:mod("part")
        local cfg = PartCfg:get("myplugin/scene_ui_task_tip")
        local instance = Instance.newInstance(cfg)
        instance:setParent(self)
        instance.parentNpcId = self.name
        self.npcTaskTip = instance
    end
end

--- 显示击杀奖励
---@param exp number
---@param coinNum number
---@param aexp number
---@param limit table
function Entity:showKillReward(exp, coinNum, aexp, limit)
    if not self.killRewardPart then
        local PartCfg = setting:mod("part")
        local cfg = PartCfg:get("myplugin/scene_ui_kill_reward")
        ---@type Instance
        local instance = Instance.newInstance(cfg)
        instance:setParent(self)
        self.killRewardPart = instance
    end
    Lib.emitEvent(Event.EVENT_GAME_ROLE_COMMON_UI_KILL_REWARD, exp, coinNum, aexp, limit)
end

--- 通用提示
---@param text any
---@param params any
function Entity:showGameTopTips(text, params)
    --local uiName = "UI/game_role_common/gui/win_top_tips"
    --local tipWindow = UI:isOpenWindow(uiName)
    --if tipWindow then
    --    tipWindow:updateContent(text, params)
    --else
    --    UI:openWindow(uiName, nil, nil, text, params)
    --end
    Plugins.CallTargetPluginFunc("fly_new_tips", "pushFlyNewTipsText", text)
end

--- 显示二次确认界面
---@param title string
---@param content string
---@param confirmCallback function
---@param cancelCallback function
---@param closeCallback function
function Entity:showConfirm(title, content, confirmCallback, cancelCallback, closeCallback)
    UI:openWindow("UI/game_role_common/gui/win_confirm", nil, nil, {
        content = content,
        title = title,
        confirmCallback = confirmCallback,
        cancelCallback = cancelCallback,
        closeCallback = closeCallback,
    })
end

function Entity.EntityProp:reviveEffect(value, add, buff)
    if add then
        self:exitStateType(Define.RoleStatus.DEAD)
    end
end

function Entity.EntityProp:partChange(value, add, buff)
end

function Entity.EntityProp:dizziness(value, add, buff)
    if value then
        if add then
            self:enterStateType(Define.RoleStatus.VERTIGO)
        else
            self:exitStateType(Define.RoleStatus.VERTIGO)
        end
    end
end

function Entity.EntityProp:knockDown(value, add, buff)
    if value then
        if add then
            self:enterStateType(Define.RoleStatus.KNOCK_DOWN)
        else
            self:exitStateType(Define.RoleStatus.KNOCK_DOWN)
        end
    end
end

function Entity.EntityProp:flyMode(value, add, buff)
    if value then
        if add then
            -- 延迟，需要等飞行生效再上移
            World.Timer(2, function()
                if self and self:isValid() then
                    local movePos = Lib.v3(0,1,0)
                    self:moveUntilCollide(movePos)
                end
                return false
            end)
        end
    end
end

function Entity.EntityProp:resetSkill(value, add, buff)
    --print(">>>>>>>>>>>>>>>>>>>>>EntityProp:resetSkill ",Lib.v2s(value),add)
    if value and self.objID==Me.objID then
        if add then
            self:setSlotSkill(value.slotList,value.skillList)
        else
            self:resumeSlotSkill()
        end
    end
end

function Entity.EntityProp:childActor(value, add, buff)
    --print(">>>>>>>>>>>>>>>>>>>>>EntityProp:childActor ",Lib.v2s(value),add)
    if value then
        if add then
            self:addSkillChildActor(value.actorName,value.pos,value.scale)
        else
            self:delChildActor(value.actorName)
        end
    end
end

function Entity.EntityProp:buffSoundKey(value, add, buff)
    if value then
        if add then
            buff.soundId = SoundManager:playSound(value, self)
        else
            SoundManager:stopSound(buff.soundId)
        end
    end
end

--- 获取engine buff
---@param id any
---@return table buff
function Entity:getBuffById(id)
    local data = self:data("buff")
    if data then
        return data[id]
    end
    return nil
end