---
--- Generated by PluginCreator
--- new_chat handler
--- DateTime:2022-01-06
---
local handles = T(Player, "PackageHandlers")
---@type VoiceShopConfig
local VoiceShopConfig = T(Config, "VoiceShopConfig")

function handles:SendChatMsgToServer(packet)
    local msgData = packet.msgData
    local msg = msgData.msg
    if not msg then
        return
    end
    if type(msg) == 'string' then
        if utf8.len(msg) > 1000 then
            return
        end
    end

    if msgData.msgType ~= Define.MsgType.Voice then
        msg = World.CurWorld:filterWord(msg)
    end
    Trigger.CheckTriggers(self:cfg(), "SEND_CHAT_MESSAGE", {obj1 = self, msg = msg, msgType = msgData.msgType})

    local data = {
        pid = "SendChatMsgToClient",
        msgData = {
            fromName = self.name,
            msg = msg,
            msgType = msgData.msgType,
            objID = self.objID,
            pageType = packet.pageType,
            fromId = self.platformUserId
        }
    }
    --Lib.logWarning("SendChatMsgToClient   ", data)
    self:sendChatMsg(data)
end

function handles:GetVoiceCardTime(packet)
    return self:getVoiceCardTime()
end

function handles:BuyVoice(packet)
    if not packet or not packet.idx then
        return
    end
    local cnt = VoiceShopConfig:getItemById(packet.idx).cost

    Lib.payMoney(self, 10000 + packet.idx, 0, cnt, function (success)
        self:sendPacket({pid = "BuyVoiceResult",isSucceed = success})
        if success then
            self:resetFreeSoundTimes()
            local reward = VoiceShopConfig:getItemById(packet.idx).num
            print(">>>>>>>>>>>>>> BuyVoice success,packet.idx,reward:",packet.idx,reward)
            if reward > 0 then
                self:addVoiceCnt(reward)
            else
                self:addMoonCard(-reward)
            end
        else
            print("BuyVoice fail")
        end
    end,1,Define.ExchangeItemsReason.BuyVoice or 2)

end

function handles:clearMoonCardTest(packet)
    self:setSoundMoonCardMac(0)
end