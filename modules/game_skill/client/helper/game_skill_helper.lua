---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/12/25 15:20
---
local socket = require("socket")
---@type LuaTimer
local LuaTimer = T(Lib, "LuaTimer")
---@type GameSkillHelper
local GameSkillHelper = T(Lib, "GameSkillHelper")
---@type SkillMovesConfig
local SkillMovesConfig = T(Config, "SkillMovesConfig")
---@type GameSkillSoundConfig
local GameSkillSoundConfig = T(Config, "GameSkillSoundConfig")
---@tye GameCameraControl
local GameCameraControl = T(Lib, "GameCameraControl")

---@type SprintSkillHelper
local SprintSkillHelper = T(Lib, "SprintSkillHelper")

local EffectSession = 0

local function AllocEffectSession()
    EffectSession = EffectSession + 1
    return tostring(EffectSession)
end

---@param freeEntity EntityClient Entity对象
local function tryPlaySound(freeEntity, soundName)
    if not soundName then
        return
    end
    local config = GameSkillSoundConfig:getSkillSoundConfig(soundName)
    if config then
        freeEntity:playSound(config)
    end
end

---在世界上增加一个不移动的静态特效
local function addStaticEffect(effect, position, yaw, duration, scale, endCallback)
    local simpleEffect = WorldEffectManager.Instance():addSimpleEffect(effect, position, 0, yaw, 0, duration,
            Lib.v3(scale, scale, scale), AllocEffectSession())
    if not simpleEffect then
        if endCallback then
            endCallback()
        end
        return duration
    end
    if simpleEffect.mEffect == nil then
        simpleEffect.mDuration = 0
        if endCallback then
            endCallback()
        end
        return duration
    end
    local time = simpleEffect.mEffect:getEffectTimeLength() * 1000 ---获取特效时间长度(单位：秒)
    if time > 0 and duration > time then
        duration = time
    end
    simpleEffect.mDuration = duration
    LuaTimer:schedule(function()
        if endCallback then
            endCallback()
        end
    end, duration)
    return duration
end

---在世界上增加一个可移动的动态特效
local function addDynamicEffect(effect, startPos, endPos, pitch, yaw, roll, duration, scale, endCallback)
    local simpleEffect = WorldEffectManager.Instance():addSimpleEffect(effect, startPos, pitch, yaw, roll, -1,
            Lib.v3(scale, scale, scale), AllocEffectSession())
    if not simpleEffect then
        if endCallback then
            endCallback()
        end
        return duration
    end
    if simpleEffect.mEffect == nil then
        simpleEffect.mDuration = 0
        if endCallback then
            endCallback()
        end
        return duration
    end
    local time = simpleEffect.mEffect:getEffectTimeLength() * 1000 ---获取特效时间长度(单位：秒)
    if time > 0 and duration > time then
        duration = time
    end
    local start = socket.gettime()
    local offPos = endPos - startPos
    World.LightTimer("[game_skill]addDynamicEffect", 1, function()
        local per = socket.gettime() - start
        simpleEffect.mPosition = startPos + offPos * math.min(per * 1000 / duration, 1)
        if per * 1000 < duration then
            return true
        end
        simpleEffect.mDuration = 0
        if endCallback then
            endCallback()
        end
        return false
    end)
    return duration
end

---@param freeEntity Entity Entity对象
local function tryPlayChildAction(freeEntity, childName, childAction)
    if not childName or not childAction then
        return
    end
    freeEntity:playChildBaseAction(childName, childAction)
end

---@param freeEntity EntityClient Entity对象
---解除对技能的锁定
local function unlockGameSkill(freeEntity)
    if not freeEntity:isValid() then
        return
    end
    freeEntity.lockGameSkill = nil
    if freeEntity.freeGameSkillCommand and socket.gettime() - freeEntity.freeGameSkillCommand[1] < 1 then
        ---尝试恢复锁住动作时，用户释放的技能指令
        local skill = GameSkillHelper:onEntityFreeSkill(freeEntity, table.unpack(freeEntity.freeGameSkillCommand, 2))
        if skill and not skill.castAction and not freeEntity.lockGameSkill then
            GameSkillHelper:tryPlayDefaultUpperAction(freeEntity)
        end
    else
        GameSkillHelper:tryPlayDefaultUpperAction(freeEntity)
    end
    freeEntity.freeGameSkillCommand = nil
end

---@param freeEntity EntityClient Entity对象
local function tryPlayAction(freeEntity, action, endCallback)
    if freeEntity:getUpperAction() == action then
        freeEntity:setPreBaseAction("idle")
        freeEntity:refreshUpperAction()
    end
    local ticks = freeEntity:updateUpperAction(action, -1)
    if ticks <= 0 then
        unlockGameSkill(freeEntity)
        if endCallback then
            endCallback()
        end
        return
    end
    World.LightTimer("[game_skill]tryPlayAction", ticks, function()
        unlockGameSkill(freeEntity)
        if freeEntity:isValid() and endCallback then
            endCallback()
        end
    end)
end

---计算结果
---@param freeEntity EntityClient Entity对象
---@param skill GameSkill 技能配置
local function doSkillResult(freeEntity, skill, startPos, hitPos, context)
    if (Me == freeEntity or context.needResult) and freeEntity:isValid() then
        GameSkillHelper:doGameSkillResult(freeEntity, skill, startPos, hitPos)
        GameSkillHelper:tryPlayerFaceToTarget(skill,freeEntity)
    end
end

---检测停止移动
---@param freeEntity EntityClient Entity对象
local function checkAddStopMove(freeEntity, isStopMove)
    if not isStopMove then
        return
    end
    freeEntity.stopMove = (freeEntity.stopMove or 0) + 1
    if freeEntity.stopMove == 1 then
        freeEntity:setEntityProp("moveSpeed", 0)
    end
end

---检测恢复移动
---@param freeEntity EntityClient Entity对象
local function checkSubStopMove(freeEntity, isStopMove)
    if not isStopMove then
        return
    end
    freeEntity.stopMove = freeEntity.stopMove - 1
    if freeEntity.stopMove == 0 then
        freeEntity:resetEntityProp("moveSpeed")
        freeEntity.stopMove = nil
    end
end

---技能结束时
---@param freeEntity EntityClient Entity对象
---@param skill GameSkill 技能配置
local function doSkillEnd(freeEntity, skill, position, duration, context)
    if not freeEntity:isValid() then
        return
    end
    tryPlaySound(freeEntity, skill.hitSound)
    ---播放命中特效
    if skill.hitEffect and skill.hitEffect:find(".effect") ~= nil then
        addStaticEffect(skill.hitEffect, position, 360 - freeEntity:getRotationYaw(), duration, skill.hitEffectScale)
    end
    tryPlayChildAction(freeEntity, skill.childActorName, skill.childEndAction)
    local function doEnd()
        checkSubStopMove(freeEntity, skill.isStopMove)
        if context.endCallback then
            context.endCallback()
        end
        if skill.autoComboSkillId ~= 0 then
            context.startPos = position
            GameSkillHelper:onEntityFreeSkill(freeEntity, skill.autoComboSkillId, context)
        end
        skill = {}
    end
    if skill.endAction then
        if freeEntity:isControl() and skill.skillClass == "SprintSkill" then
            SprintSkillHelper:exitSprintSkillState(freeEntity)
        end
        tryPlayAction(freeEntity, skill.endAction, function()
            doEnd()
        end)
    else
        if freeEntity:isControl() and skill.skillClass == "SprintSkill" then
            SprintSkillHelper:exitSprintSkillState(freeEntity)
        end
        doEnd()
    end
end

---技能表现，弹道特效
---@param freeEntity EntityClient
---@param skill GameSkill 技能配置
local function doSkillBulletEffect(freeEntity, skill, context)
    tryPlaySound(freeEntity, skill.bulletSound)
    local duration = skill.duration
    local endPos
    local yaw = math.rad(freeEntity:getRotationYaw())
    local pitch = math.rad(skill.bulletPitch)
    local startPos = context.startPos
    if startPos == nil then
        if skill.distance > 0 then
            startPos = Lib.tov3(freeEntity:getEyePos())
        else
            startPos = Lib.tov3(freeEntity:getPosition())
        end
    end
    startPos.x = startPos.x - math.sin(yaw) * skill.bulletOffset.x
    startPos.y = startPos.y + skill.bulletOffset.y
    startPos.z = startPos.z + math.cos(yaw) * skill.bulletOffset.z
    if skill.distance > 0 then
        local len = skill.distance
        local pos = Lib.tov3(Lib.copyTable1(startPos))
        pos.x = pos.x - math.sin(yaw) * math.cos(pitch) * len
        pos.y = pos.y - math.sin(pitch) * len
        pos.z = pos.z + math.cos(yaw) * math.cos(pitch) * len
        endPos = pos
    end
    if skill.bulletEffect and skill.bulletEffect:find(".effect") ~= nil then
        if endPos and skill.bulletEffectMove then
            duration = addDynamicEffect(skill.bulletEffect, startPos, endPos, freeEntity:getRotationPitch(),
                    360 - freeEntity:getRotationYaw(), freeEntity:getRotationRoll(), skill.duration, skill.bulletEffectScale,
                    function()
                        doSkillEnd(freeEntity, skill, endPos, skill.duration, context)
                        doSkillResult(freeEntity, skill, startPos, endPos, context)
                    end)
        else
            duration = addStaticEffect(skill.bulletEffect, startPos, 360 - freeEntity:getRotationYaw(), skill.duration, skill.bulletEffectScale,
                    function()
                        doSkillEnd(freeEntity, skill, endPos or startPos, skill.duration, context)
                        if endPos then
                            doSkillResult(freeEntity, skill, startPos, endPos, context)
                        end
                    end)
            if not endPos then
                doSkillResult(freeEntity, skill, startPos, startPos, context)
            end
        end
    else
        ---没有弹道，直接造成伤害
        LuaTimer:schedule(function()
            doSkillEnd(freeEntity, skill, endPos or startPos, skill.duration, context)
        end, skill.duration)
        doSkillResult(freeEntity, skill, startPos, endPos or startPos, context)
    end
    ---没有任何动作的技能，结束时要检测一次解锁动作
    if not skill.castAction and not skill.endAction then
        LuaTimer:schedule(function()
            unlockGameSkill(freeEntity)
        end, duration)
    end

    if skill.isFollowBullet and endPos then
        ---跟随弹道位移，发送位移数据
        if Me == freeEntity or context.needResult then
            local eyeOffset = freeEntity:getEyePos() - freeEntity:getPosition()
            Me:sendPacket({ pid = "doGameSkillEntityMove", freeObjID = freeEntity.objID,
                            endPos = endPos - eyeOffset, duration = duration })
        end
    end

    if skill.hitTimes <= 1 then
        ---只作用一次的话，播放完特效后造成伤害
        return
    end
    local period = math.floor(duration / skill.hitTimes)
    local offPos
    if endPos then
        offPos = (endPos - startPos) / skill.hitTimes
    end
    local curPos = Lib.tov3(Lib.copyTable1(startPos))
    LuaTimer:scheduleTimer(function()
        if offPos then
            curPos = curPos + offPos
        end
        doSkillResult(freeEntity, skill, startPos, curPos, context)
    end, period, skill.hitTimes - 1)
end

---尝试获取是否有可以释放的连招
---@param freeEntity EntityClient Entity对象
---@param skill GameSkill 技能配置
local function tryComboSkill(freeEntity, skill)
    if skill.comboTime > 0 and skill.comboSkillId > 0 then
        local record = freeEntity:data("game_skill_free_time_record")
        local time = socket.gettime()
        if time - (record[skill.skillId] or 0) < skill.comboTime / 1000 then
            if skill.comboSkillId == skill.skillId then
                record[skill.skillId] = time
                return skill
            end
            local comboSkill = SkillMovesConfig:getSkillConfig(skill.comboSkillId)
            if comboSkill then
                if skill.skillId == comboSkill.comboSkillId then
                    record[comboSkill.skillId] = time
                    return comboSkill
                end
                if comboSkill.comboTime > 0 and comboSkill.comboSkillId > 0 then
                    record[skill.skillId] = record[skill.skillId] + comboSkill.comboTime / 1000
                end
                return tryComboSkill(freeEntity, comboSkill)
            else
                record[skill.skillId] = time
                return skill
            end
        else
            record[skill.skillId] = time
            return skill
        end
    end
    return skill
end

---清除连招记录
---@param freeEntity EntityClient
local function clearComboRecord(freeEntity, skill)
    if skill.comboTime > 0 and skill.comboSkillId > 0 then
        local record = freeEntity:data("game_skill_free_time_record") or {}
        record[skill.skillId] = nil
        local comboSkill = SkillMovesConfig:getSkillConfig(skill.comboSkillId)
        if comboSkill then
            clearComboRecord(freeEntity, comboSkill)
        end
    end
end

function GameSkillHelper:tryPlayerFaceToTarget(skill,freeEntity)
    do
        return
    end
    local target=GameSkillHelper:GetNearestTarget(skill,freeEntity,skill.distance)
    GameCameraControl:setRoleYawToTarget(target)
end

---技能结束时，播放默认的上半身动作
---@param freeEntity EntityClient
function GameSkillHelper:tryPlayDefaultUpperAction(freeEntity, force)
    local action = freeEntity:getValue("defaultUpperAction")
    if action == "idle" and not force then
        return
    end
    local upperAction = freeEntity:getUpperAction()
    if upperAction == "idle" or upperAction == action or force then
        ---设置一个无限时间的动作
        freeEntity:updateUpperAction(action, 999999)
        return
    end
    World.LightTimer("[game_skill]tryPlayDefaultUpperAction", 1, function()
        if freeEntity:isValid() then
            GameSkillHelper:tryPlayDefaultUpperAction(freeEntity)
        end
    end)
end

function GameSkillHelper:onEntityDoJumpSkill(freeEntity, skillId)
    ---@type GameSkill
    local oldSkill = SkillMovesConfig:getSkillConfig(skillId)
    if not oldSkill then
        return
    end
    local skill = Lib.copyTable1(oldSkill) ---生成一个技能
    if skill.castAction then
        tryPlayChildAction(freeEntity, skill.childActorName, skill.childCastAction)
        freeEntity:updateUpperAction(skill.castAction, -1, true)
    end
end

function GameSkillHelper:getFreeSkillWithCombo(freeEntity, skillId)
    ---@type GameSkill
    local oldSkill = SkillMovesConfig:getSkillConfig(skillId)
    if not oldSkill then
        return
    end
    local newSkill = tryComboSkill(freeEntity, oldSkill) ---尝试连招
    if newSkill.comboSkillId == 0 then
        clearComboRecord(freeEntity, oldSkill)
    end
    return newSkill, oldSkill
end

---当Entity释放技能
---@param freeEntity EntityClient Entity对象
---@param skillId number 技能ID
---@param context table context = { endCallback = function, needResult = boolean, startPos = Vector3 } 参数
function GameSkillHelper:onEntityFreeSkill(freeEntity, skillId, context)
    ---@type GameSkill
    local oldSkill = SkillMovesConfig:getSkillConfig(skillId)
    if not oldSkill then
        return
    end

    context = context or {}
    if oldSkill.ignoreInterruptAction then
        local newSkill = self:getFreeSkillWithCombo(freeEntity, skillId)
        return self:doEntityFreeSkill(freeEntity, newSkill, context)
    else
        if freeEntity.lockGameSkill then
            ---技能被锁住，暂存技能指令
            freeEntity.freeGameSkillCommand = { socket.gettime(), skillId, context }
            return
        end
        local newSkill = self:getFreeSkillWithCombo(freeEntity, skillId)
        return self:doEntityFreeSkill(freeEntity, newSkill, context)
    end
end

---当Entity释放技能
---@param freeEntity EntityClient Entity对象
---@param skillId number 技能ID
---@param context table context = { endCallback = function, needResult = boolean, startPos = Vector3 } 参数
function GameSkillHelper:doEntityFreeSkill(freeEntity, newSkill, context)
    if not newSkill then
        return
    end
    local skill = Lib.copyTable1(newSkill) ---生成一个技能
    if skill.forbidInterruptAction and (not skill.ignoreInterruptAction) then
        ---禁止被打断，锁住技能
        freeEntity.lockGameSkill = true
    end
    skill.hitTargetTimes = {} ---用于记录该技能命中Entity的次数
    tryPlaySound(freeEntity, skill.castSound)
    checkAddStopMove(freeEntity, skill.isStopMove)

    if skill.preAction then
        if freeEntity:getUpperAction() == skill.preAction then
            freeEntity:setPreBaseAction("idle")
            freeEntity:refreshUpperAction()
        end
        local ticks = freeEntity:updateUpperAction(skill.preAction, -1)
        if ticks <= 0 then
            self:doFreeSkillContent(freeEntity, skill, context)
        else
            World.LightTimer("[game_skill]doEntityFreeSkill", ticks, function()
                self:doFreeSkillContent(freeEntity, skill, context)
            end)
        end
    else
        self:doFreeSkillContent(freeEntity, skill, context)
    end
    return skill
end

function GameSkillHelper:doFreeSkillContent(freeEntity, skill, context)
    if freeEntity:isControl() and skill.skillClass == "SprintSkill" then
        SprintSkillHelper:enterSprintSkillState(freeEntity)
    end
    if skill.castAction then
        local function doSkillContent()
            if skill.bulletDelayTime < 0 then
                tryPlayAction(freeEntity, skill.castAction, function()
                    tryPlayChildAction(freeEntity, skill.childActorName, skill.childCastAction)
                    doSkillBulletEffect(freeEntity, skill, context)
                end)
            else
                if skill.bulletDelayTime == 0 then
                    tryPlayChildAction(freeEntity, skill.childActorName, skill.childCastAction)
                    tryPlayAction(freeEntity, skill.castAction)
                    doSkillBulletEffect(freeEntity, skill, context)
                else
                    tryPlayChildAction(freeEntity, skill.childActorName, skill.childCastAction)
                    tryPlayAction(freeEntity, skill.castAction)
                    LuaTimer:schedule(function()
                        if freeEntity:isValid() then
                            doSkillBulletEffect(freeEntity, skill, context)
                        end
                    end, skill.bulletDelayTime)
                end
            end
        end
        if skill.actionDelayTime > 0 then
            LuaTimer:schedule(function()
                if freeEntity:isValid() then
                    doSkillContent()
                end
            end, skill.actionDelayTime)
        else
            doSkillContent()
        end
    else
        tryPlayChildAction(freeEntity, skill.childActorName, skill.childCastAction)
        doSkillBulletEffect(freeEntity, skill, context)
    end
end

