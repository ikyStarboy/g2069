---
--- Generated by PluginCreator
--- game_common handler
--- DateTime:2023-02-24
---

local handles = T(Player, "PackageHandlers")

function handles:S2CExitActionState(packet)
    --print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>> S2CExitActionState",Lib.v2s(packet))
    local entity=World.CurWorld:getEntity(packet.objID)
    if entity and entity:isValid() then
        --print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>> S2CExitActionState",packet.objID)
        entity:exitStateType(Define.RoleStatus.SKILL_ACTION_STATE)
    end
end

function handles:S2CExitChargeState(packet)
    --print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>> S2CExitChargeState",Lib.v2s(packet))
    Me:exitStateType(Define.RoleStatus.SKILL_CHARGE_STATE,false,packet.skillMoveId)
end

function handles:S2CCleanFlySkillState(packet)
    --print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>> S2CCleanFlySkillState")
    ---@type GameSkillCastHelper
    local GameSkillCastHelper = T(Lib,"GameSkillCastHelper")
    local exCD=World.cfg.game_skillSetting.shootDownCDAdd and World.cfg.game_skillSetting.shootDownCDAdd*1000 or 3000
    local strategySwitch = GameSkillCastHelper:getStrategy(Define.GameSkillCastType.Switch)
    strategySwitch:cleanALlSkillStateAndCD(exCD)
    local strategyContinuous = GameSkillCastHelper:getStrategy(Define.GameSkillCastType.Continuous)
    strategyContinuous:stopContinuous(strategyContinuous.curContinuousSkill,strategyContinuous.curContinuousMove,exCD)
end

local guiMgr = L("guiMgr", GUIManager:Instance())
local function hitDownAni()
    local root = guiMgr:getRootWindow()
    local item = UI:openWidget("UI/main/gui/widget_hitdown_tips")
    root:addChild(item:getWindow())
    item:setLevel(5)

end
function handles:S2CShowShootDownEffect(packet)
    --UI:openWindow("UI/main/gui/win_shoot_down")
    hitDownAni()
    --- @type SoundManager
    local SoundManager = T(Lib, "SoundManager")
    SoundManager:playSound(World.cfg.game_skillSetting.shootDownSound or "hit_down")
end

