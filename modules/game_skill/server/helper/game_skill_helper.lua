---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/12/25 15:20
---
---@type GameSkillHelper
local GameSkillHelper = T(Lib, "GameSkillHelper")
---@type SkillMovesConfig
local SkillMovesConfig = T(Config, "SkillMovesConfig")
---@type SkillConfig
local SkillConfig = T(Config, "SkillConfig")

---当Entity释放技能
---@param entity Entity 玩家对象
---@param skillId number 技能ID
function GameSkillHelper:onEntityFreeSkill(entity, skillId, targetId,moveId)
    local skillCfg=SkillConfig:getSkillConfig(skillId)
    if skillCfg and skillCfg.isEngineSkill then
        local moveId=moveId or skillCfg.skillMoves[1]
        local config = SkillMovesConfig:getNewSkillConfig(moveId)
        if config and config.skillName then
            Skill.Cast(config.skillName,nil,entity)
        end
        return
    end

    local config = SkillMovesConfig:getSkillConfig(skillId)
    if not config then
        return
    end
    local packet = { pid = "onEntityFreeGameSkill", skillId = skillId, freeObjID = entity.objID }
    if not entity.isPlayer then
        if targetId then
            packet.resultPlayerID = targetId
        else
            ---找最近的玩家来计算结果
            local minDis = 99999999
            local players = Game.GetAllPlayers()
            local resultPlayer
            for _, player in pairs(players) do
                local distance = (Lib.tov3(entity:getPosition()) - player:getPosition()):len()
                if distance < minDis then
                    minDis = distance
                    resultPlayer = player
                end
            end
            if resultPlayer then
                packet.resultPlayerID = targetId
            end
        end
    else
        local BattleSystem = T(Lib, "BattleSystem")
        if  not BattleSystem:isDead(entity) and config.skillClass=="AttackSkill" then
            entity:enterStateType(Define.RoleStatus.BATTLE_STATE)
        end
    end
    if config.isClientGoAhead then
        entity:sendPacketToTracking(packet)
    else
        entity:sendPacketToTracking(packet, entity.isPlayer)
    end
end

---设置Entity技能释放完成时默认的上半身动作
---@param entity Entity 玩家对象
---@param action string 动作名称
function GameSkillHelper:setDefaultUpperAction(entity, action)
    entity:setValue("defaultUpperAction", action)
end